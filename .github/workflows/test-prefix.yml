name: Test Prefix Versioning

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-dev-prefix:
    runs-on: ubuntu-latest
    name: Test Dev Prefix Version
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        clean: true
    
    - name: Test Dev Prefix Version
      id: version
      uses: sanjeevkumarraob/version-system@main
      with:
        VERSION_FILE: "version.txt"
        GIT_REPO_PATH: "."
        PREFIX: "dev-"
        CREATE_RELEASE: false
        IS_SNAPSHOT: false
    
    - name: Display Dev Results
      run: |
        echo "üè∑Ô∏è Current Dev Version: ${{ steps.version.outputs.current_version }}"
        echo "üöÄ Next Dev Version: ${{ steps.version.outputs.version }}"
    
    - name: Validate Dev Output
      run: |
        if [[ "${{ steps.version.outputs.version }}" =~ ^dev-[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "‚úÖ Dev prefix version format is valid: ${{ steps.version.outputs.version }}"
        else
          echo "‚ùå Error: Invalid dev prefix version format: ${{ steps.version.outputs.version }}"
          exit 1
        fi

  test-staging-prefix:
    runs-on: ubuntu-latest
    name: Test Staging Prefix Version
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        clean: true
    
    - name: Test Staging Prefix Version
      id: version
      uses: sanjeevkumarraob/version-system@main
      with:
        VERSION_FILE: "version.txt"
        GIT_REPO_PATH: "."
        PREFIX: "staging-"
        CREATE_RELEASE: false
        IS_SNAPSHOT: false
    
    - name: Display Staging Results
      run: |
        echo "üè∑Ô∏è Current Staging Version: ${{ steps.version.outputs.current_version }}"
        echo "üöÄ Next Staging Version: ${{ steps.version.outputs.version }}"
    
    - name: Validate Staging Output
      run: |
        if [[ "${{ steps.version.outputs.version }}" =~ ^staging-[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "‚úÖ Staging prefix version format is valid: ${{ steps.version.outputs.version }}"
        else
          echo "‚ùå Error: Invalid staging prefix version format: ${{ steps.version.outputs.version }}"
          exit 1
        fi
